@startuml Calculator state machine diagram

' Initial_state 最初の状態
' State1 initial_state(num(1~9))
' State2 initial_state(num(0))
' State3 state1(dot) and state2(dot)
' State3 state3(num(0)) and state3(num(1~9))
' State4 state1(calc) and state2(calc) and state3(calc)

[*] --> Calucutation : Power ON

State Calucutation{
    [*] --> Initial_state
    Initial_state : numflag=0
    Initial_state : zeroflag=0
    Initial_state : dotflag=0
    Initial_state : calcflag=0
    Initial_state : num1=no value
    Initial_state : num2=no value
    Initial_state -> Initial_state : CR()

    Initial_state --> State1 : num(1~9)
    State1 -> State1 : num(1~9)
    State1 -> State1 : num(0)
    State1 -> Initial_state : CR()
    State1 : numflag=1
    State1 : zeroflag=0
    State1 : dotflag=0
    State1 : calcflag=0
    State1 : num1=have a value
    State1 : num2=no value

    Initial_state --> State2 : num(0)
    State2 -> Initial_state : CR()
    State2 : numflag=1
    State2 : zeroflag=1
    State2 : dotflag=0
    State2 : calcflag=0
    State2 : num1=have a value
    State2 : num2=no value

    State1 --> State3 : dot()
    State2 --> State3 : dot()
    State3 -> Initial_state : CR()
    State3 : numflag=1
    State3 : zeroflag=0
    State3 : dotflag=1
    State3 : calcflag=0
    State3 : num1=have a value(if 1.->1)
    State3 : num2=no value
    State3 -> State3 : num(0)
    State3 -> State3 : num(1~9)

    State1 ---> State4 : calc()
    State2 ---> State4 : calc()
    State3 --> State4 : calc()
    State4 -> Initial_state : CR()
    State4 : numflag=2
    State4 : zeroflag=0
    State4 : dotflag=0
    State4 : calcflag=true(1:+, 2:-, 3:*, 4:/)
    State4 : num1=have a value
    State4 : num2=no value

    State4 --> State1.2 : num(1~9)
    State1.2 -> State1.2 : num(1~9)
    State1.2 -> State1.2 : num(0)
    State1.2 -> Initial_state : CR()
    State1.2 : numflag=3
    State1.2 : zeroflag=0
    State1.2 : dotflag=0
    State1.2 : calcflag=true(1:+, 2:-, 3:*, 4:/)
    State1.2 : num1=have a value
    State1.2 : num2=have a value

    State4 --> State2.2 : num(0)
    State2.2 -> Initial_state : CR()
    State2.2 : numflag=3
    State2.2 : zeroflag=1
    State2.2 : dotflag=0
    State2.2 : calcflag=0
    State2.2 : num1=have a value
    State2.2 : num2=have a value
    
    State1.2 --> State3.2 : dot()
    State2.2 --> State3.2 : dot()
    State3.2 -> Initial_state : CR()
    State3.2 : numflag=3
    State3.2 : zeroflag=0
    State3.2 : dotflag=1
    State3.2 : calcflag=0
    State3.2 : num1=have a value(if 1.->1)
    State3.2 : num2=have a value
    State3.2 -> State3.2 : num(0)
    State3.2 -> State3.2 : num(1~9)

    State1.2 --> State5 : eq()
    State2.2 --> State5 : eq()
    State3.2 --> State5 : eq()
    State5 -> Initial_state : CR()
    State5 : numflag=2
    State5 : zeroflag=0
    State5 : dotflag=0
    State5 : calcflag=0
    State5 : num1=have a value
    State5 : num2=have a value
    State5 -> State4 : calc()

}

Calucutation --> [*] : Power OFF


@enduml